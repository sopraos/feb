/* ==|====================
	 Functions
	 ======================= */

@import 'functions/unites';
@import 'functions/colors';

@function subtract($value1, $value2, $return-calc: true) {
	@if $value1 == null and $value2 == null {
		@return null;
	}

	@if $value1 == null {
		@return -$value2;
	}

	@if $value2 == null {
		@return $value1;
	}

	@if type-of($value1) == number and type-of($value2) == number and comparable($value1, 	$value2) {
		@return $value1 - $value2;
	}

	@if type-of($value1) != number {
		$value1: unquote("(") + $value1 + unquote(")");
	}

	@if type-of($value2) != number {
		$value2: unquote("(") + $value2 + unquote(")");
	}

	@return if($return-calc == true, calc(#{$value1} - #{$value2}), $value1 + unquote(" - ") + 	$value2);
}

// Utilisé sur nos arrière-plans d'icônes SVG pour les formulaires personnalisés.
@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// Nécessite l'utilisation de guillemets autour des URI de données.
@function escape-svg($string) {
	@if str-index($string, "data:image/svg+xml") {
		@each $char, $encoded in $escaped-characters {
			@if str-index($string, "url(") == 1 {
				$string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");
			}

			@else {
				$string: str-replace($string, $char, $encoded);
			}
		}
	}

	@return $string;
}
