// Mixins - Breakpoints
// ==|====================

// Nom du point d’arrêt suivant, ou null pour le dernier point d’arrêt.
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
	$n: index($breakpoint-names, $name);

	@if not $n {
		@error "breakpoint `#{$name}` not found in `#{$breakpoints}`";
	}

	@return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

// Largeur minimale du point d'arrêt. Null pour le plus petit (premier) point d'arrêt.
// (576px)
@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
	$min: map-get($breakpoints, $name);

	@return if($min != 0, $min, null);
}

// Largeur maximale du point d'arrêt Null pour le plus grand (dernier) point d'arrêt.
// (767.98px)
@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
	$max: map-get($breakpoints, $name);

	@return if($max and $max > 0, $max - .02, null);
}

// Renvoie une chaîne vide si le plus petit point d'arrêt, sinon renvoie le nom avec un tiret à l'avant.
// Utile pour créer des utilitaires réactifs.
// ("-m")
@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
	@return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
}

// Médias d’au moins la largeur minimale de point d’arrêt. Pas de requête pour le plus petit point d’arrêt.
// Rend le @content applicable au point d'arrêt donné et plus large.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);

	@if $min {
		@media (min-width: $min) {
			@content;
		}
	}

	@else {
		@content;
	}
}

// Médias d’au maximum la largeur maximale du point d'arrêt. Pas de requête pour le plus grand point d'arrêt.
// Rend le @content appliqué sur le point d’arrêt donné et plus étroit.
@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
	$max: breakpoint-max($name, $breakpoints);

	@if $max {
		@media (max-width: $max) {
			@content;
		}
	}

	@else {
		@content;
	}
}

// Support qui couvre plusieurs largeurs de points d'arrêt.
// Rend le @content applicable entre les points d'arrêt min et max
@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($lower, $breakpoints);
	$max: breakpoint-max($upper, $breakpoints);

	@if $min != null and $max != null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	}

	@else if $max == null {
		@include media-breakpoint-up($lower, $breakpoints) {
			@content;
		}
	}

	@else if $min == null {
		@include media-breakpoint-down($upper, $breakpoints) {
			@content;
		}
	}
}

// Média entre les largeurs minimale et maximale du point d'arrêt.
// Pas de minimum pour le plus petit point d'arrêt, et pas de maximum pour le plus grand.
// Rend le @content applicable uniquement au point d'arrêt donné, pas aux fenêtres plus larges ou plus étroites.
@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
	$min:  breakpoint-min($name, $breakpoints);
	$next: breakpoint-next($name, $breakpoints);
	$max:  breakpoint-max($next);

	@if $min != null and $max != null {
		@media (min-width: $min) and (max-width: $max) {
			@content;
		}
	}

	@else if $max == null {
		@include media-breakpoint-up($name, $breakpoints) {
			@content;
		}
	}

	@else if $min == null {
		@include media-breakpoint-down($next, $breakpoints) {
			@content;
		}
	}
}
